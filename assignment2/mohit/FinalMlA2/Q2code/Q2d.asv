clear all
clc
mainFile =  load('mnist_all.mat');



train1 = double(mainFile.train1)/255;
train2 = double(mainFile.train2)/255;
train3 = double(mainFile.train3)/255;
train4 = double(mainFile.train4)/255;
train5 = double(mainFile.train5)/255;
train6 = double(mainFile.train6)/255;
train7 = double(mainFile.train7)/255;
train8 = double(mainFile.train8)/255;
train9 = double(mainFile.train9)/255;
train10 = double(mainFile.train0)/255;

sz = zeros(10,1);

for i = 1:10
    str = sprintf('train%d',i);
    [row,col] = size(eval(str));
    sz(i,1) = row;    
end

totalRow = sum(sz);

thetaL1 = 0.1*randn(100,785);
thetaL2 = 0.1*randn(10,100);


%mixing data


trainIndex = ones(10,1);

totalRow = 10000;
trainSet = zeros(totalRow,col);
Y = zeros(totalRow,10);
index = 0;


while(index<=totalRow)
    index = index + 1;
    flag = 1;
    if mod(index,10) == 1
        if trainIndex(1,1) < sz(1,1)
           Y(index,:) = [1 0 0 0 0 0 0 0 0 0];
           trainSet(index,:) = train1(trainIndex(1,1),:);
           trainIndex(1,1) = trainIndex(1,1) + 1;
           continue
        else
            flag = -1;
        end
    end
    
    if mod(index,10) == 2 || flag == -1
        if trainIndex(2,1) < sz(2,1)
           Y(index,:) = [0 1 0 0 0 0 0 0 0 0];
           trainSet(index,:) = train2(trainIndex(2,1),:);
           trainIndex(2,1) = trainIndex(2,1) + 1;
           continue
        else
            flag = -1;
        end
    end
    
    if mod(index,10) == 3 || flag == -1
        if trainIndex(3,1) < sz(3,1)
           Y(index,:) = [0 0 1 0 0 0 0 0 0 0];
           trainSet(index,:) = train3(trainIndex(3,1),:);
           trainIndex(3,1) = trainIndex(3,1) + 1;
           continue
        else
            flag = -1;
        end
    end
    
    if mod(index,10) == 4 || flag == -1
        if trainIndex(4,1) < sz(4,1)
           Y(index,:) = [0 0 0 1 0 0 0 0 0 0];
           trainSet(index,:) = train4(trainIndex(4,1),:);
           trainIndex(4,1) = trainIndex(4,1) + 1;
           continue
        else
            flag = -1;
        end
    end
    
    if mod(index,10) == 5 || flag == -1
        if trainIndex(5,1) < sz(5,1)
           Y(index,:) = [0 0 0 0 1 0 0 0 0 0];
           trainSet(index,:) = train5(trainIndex(5,1),:);
           trainIndex(5,1) = trainIndex(5,1) + 1;
           continue
        else
            flag = -1;
        end
    end
    
    if mod(index,10) == 6 || flag == -1
        if trainIndex(6,1) < sz(6,1)
           Y(index,:) = [0 0 0 0 0 1 0 0 0 0];
           trainSet(index,:) = train6(trainIndex(6,1),:);
           trainIndex(6,1) = trainIndex(6,1) + 1;
           continue
        else
            flag = -1;
        end
    end
    
    if mod(index,10) == 7 || flag == -1
        if trainIndex(7,1) < sz(7,1)
           Y(index,:) = [0 0 0 0 0 0 1 0 0 0];
           trainSet(index,:) = train7(trainIndex(7,1),:);
           trainIndex(7,1) = trainIndex(7,1) + 1;
           continue
        else
            flag = -1;
        end
    end
    
    if mod(index,10) == 8 || flag == -1
        if trainIndex(8,1) < sz(8,1)
           Y(index,:) = [0 0 0 0 0 0 0 1 0 0];
           trainSet(index,:) = train8(trainIndex(8,1),:);
           trainIndex(8,1) = trainIndex(8,1) + 1;
           continue
        else
            flag = -1;
        end
    end
    
    if mod(index,10) == 9 || flag == -1
        if trainIndex(9,1) < sz(9,1)
           Y(index,:) = [0 0 0 0 0 0 0 0 1 0];
           trainSet(index,:) = train9(trainIndex(9,1),:);
           trainIndex(9,1) = trainIndex(9,1) + 1;
           continue
        else
            flag = -1;
        end
    end
    
    if mod(index,10) == 0 || flag == -1
        if trainIndex(10,1) < sz(10,1)
           Y(index,:) = [0 0 0 0 0 0 0 0 0 1];
           trainSet(index,:) = train10(trainIndex(10,1),:);
           trainIndex(10,1) = trainIndex(10,1) + 1;
           continue
        else
            break;
        end
    end
end



 clear train1;train2;train3;train4;train5;train6;train7;train8;train9;train10;

[row,col] = size(trainSet);
lastJ = 100;
threshold = 1e-06;
i = 1;
t = 1;
while(1)
    
    
    x = [1 trainSet(i,:)];
    [OjL1,OjL2] = OutputOn([1 trainSet(i,:)],thetaL1,thetaL2) ;
    Yi = Y(i,:)';
    
    diff = Yi' - OjL2;
    J = 0.5 * (diff * diff');
    
    
    %checking for convergence
    chnge = abs(J-lastJ)
    if chnge < threshold
        break
    end
     
    n = 1/sqrt(t);
   
   delJnetL2 = zeros(10,1);
   for j = 1:10
      delJnetL2(j,1) = (Yi(j,1)-OjL2(1,j))*(-1) * OjL2(1,j) * (1-OjL2(1,j)); 
      delJQ1 = delJnetL2(j,1) * OjL1;
      thetaL2(j,:) = thetaL2(j,:) - n*(delJQ1);
   end
    
   %updating theta values for layer 2
%    delJnet1 = (Y1 - OjL2(1,1))*(-1)*OjL2(1,1)*(1-OjL2(1,1));
%    delJQ1 = delJnet1 * OjL1;
%    thetaL2(1,:) = thetaL2(1,:) - n*(delJQ1);
%    
%    delJnet2 = (Y2 - OjL2(1,2))*(-1)*OjL2(1,2)*(1-OjL2(1,2));
%    delJQ2 = delJnet2 * OjL1;
%    thetaL2(2,:) = thetaL2(2,:) - n*(delJQ2);
   
   %updating theta values for layer 1
   
   %delJnetI = delJnet1*(thetaL2(1,:).*(OjL1.*(1-OjL1)))+delJnet2*(thetaL2(2,:).*(OjL1.*(1-OjL1)));
   
%    delJnetI = delJnet1*(thetaL2(1,:).*(OjL1.*(1-OjL1)))+delJnet2*(thetaL2(2,:).*(OjL1.*(1-OjL1)));
%    
%    for j = 1:100
%       delJQI = delJnetI(1,j) * x;
%       thetaL1(j,:) = thetaL1(j,:) - n*(delJQI);
%    end

   delJnetI = zeros(1,100);
   for j  = 1:10
       delJnetI = delJnetI + delJnetL2(j,1)*(thetaL2(j,:).*(OjL1.*(1-OjL1)));
   end
   
   for j = 1:100
      delJQI = delJnetI(1,j) * x;
      thetaL1(j,:) = thetaL1(j,:) - n*(delJQI);
   end
 
   lastJ = J;
   i = i+1;
   
   if i == row
       i=1;
       t = t+1
       chnge
   end
end

% 
% co = 0;
% for i = 1:row
%     
%     [OjL1,OjL2] = OutputOj([1 trainSet(i,:)],thetaL1,thetaL2) ;
%     if OjL2(1,1) > OjL2(1,2)
%        class = 1;
%     else
%         class = 0 ;
%     end
%     
%     if Y(i,1) == class
%         co = co + 1;
%     end
% end
% 
% trainA=co/row
% 
% test3 = double(mainFile.test3)/255;
% [row,col] = size(test3);
% co = 0;
% for i = 1:row
%      
%     [OjL1,OjL2] = OutputOj([1 test3(i,:)],thetaL1,thetaL2) ;
%     if OjL2(1,1)>OjL2(1,2)
%        co = co+1; 
%     end
% end
% A3=co/row
% 
% test8 = double(mainFile.test8)/255;
% [row,col] = size(test8);
% co = 0;
% for i = 1:row
%      
%     [OjL1,OjL2] = OutputOj([1 test8(i,:)],thetaL1,thetaL2) ;
%     if OjL2(1,1)<OjL2(1,2)
%        co = co+1; 
%     end
% end
% A8=co/row
% 
% 
